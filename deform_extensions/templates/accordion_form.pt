<!-- Form template for inline rendering of direct children
  Should be seriously tested with complex forms (including mappings or sequences)
-->
<form
  tal:define="style style|field.widget.style;
              css_class css_class|string:${field.widget.css_class or field.css_class or ''};
              item_template item_template|field.widget.item_template;
              autocomplete autocomplete|field.autocomplete;
              title title|field.title;
              errormsg errormsg|field.errormsg;
              description description|field.description;
              buttons buttons|field.buttons;
              use_ajax use_ajax|field.use_ajax;
              ajax_options ajax_options|field.ajax_options;
              formid formid|field.formid;
              fields python: field.widget.accordions(field);
              top_level_fields fields[0];
              accordions fields[1];
              grid_item_template item_template|field.widget.item_template;
              default_item_template default_item_template|field.widget.default_item_template;
              action action|field.action or None;
              method method|field.method;"
  tal:attributes="autocomplete autocomplete;
                  style style;
                  class css_class;
                  action action;"
  id="${formid}"
  method="${method}"
  enctype="multipart/form-data"
  accept-charset="utf-8"
  i18n:domain="deform"
  >

  <fieldset class="deformFormFieldset">
    <legend tal:condition="title">${title}</legend>
    <!-- Hidden inputs and alerts at the top -->
    <input type="hidden" name="_charset_" />
    <input type="hidden" name="__formid__" value="${formid}"/>

    <div class="alert alert-danger" tal:condition="field.error">
      <div class="errorMsgLbl" i18n:translate=""
        >There was a problem with your submission</div>
      <p class="errorMsg">${field.errormsg}</p>
    </div>

    <p class="section first" tal:condition="description">
      ${description}
    </p>

    <div tal:omit-tag="" tal:repeat="field top_level_fields">
      <tal:block tal:omit-tag="" tal:condition="field">
        <div tal:replace="structure field.render_template(default_item_template)" />
      </tal:block>
    </div>

    <div class='panel-group' id='form-accordion' role="tablist" aria-multiselectable="true">

      <div class="panel panel-default"
              tal:repeat="accordion accordions.values()"
              i18n:domain="deform"
              >
        <div class='panel-heading' role="tab" id="${accordion['tag_id']}-heading">
          <h4 class="panel-title">
            <a href="#${accordion['tag_id']}"
              data-toggle='collapse'
              class="accordion-toggle ${accordion['error'] and 'alert-error' or ''}"
              aria-expanded="true" aria-controls="${accordion['tag_id']}"
              data-parent="#form-accordion"
            >
              <i class="glyphicon glyphicon-chevron-down"></i>
              ${accordion['name']}
            </a>
          </h4>
        </div>
        <div class="panel-collapse collapse ${repeat.accordion.start and 'in' or ''}"
          id="${accordion['tag_id']}"
          role="tabpanel" aria-labelledby="${accordion['tag_id']}-heading"
          >
          <tal:if tal:condition="accordion.has_key('rows')">
            <div class='panel-body' tal:define="
              childgroups accordion.rows
              "
              i18n:domain="deform"
              >
              <div class="row form-row"
                tal:repeat="childgroup childgroups"
                i18n:domain="deform"
                >
                <div tal:omit-tag="" tal:repeat="child childgroup">
                  <tal:block tal:omit-tag="" tal:condition="child">
                    <div tal:replace="structure child.render_template(grid_item_template)" />
                  </tal:block>
                </div>
              </div>
            </div>
          </tal:if>
          <tal:if tal:condition="not accordion.has_key('rows')">
            <div class='panel-body' tal:define="
              childgroup accordion.children
              "
              i18n:domain="deform"
              >
                <div tal:omit-tag="" tal:repeat="child childgroup">
                  <tal:block tal:omit-tag="" tal:condition="child">
                    <div tal:replace="structure child.render_template(default_item_template)" />
                  </tal:block>
                </div>
            </div>
          </tal:if>
        </div>
      </div>
    </div>


    <!-- Append the buttons at the end -->
    <div class="form-group">
      <tal:loop tal:repeat="button buttons">
        <tal:if tal:condition="hasattr(button, 'render')">
        ${structure:button.render(request)}
        </tal:if>
        <tal:if tal:condition="not hasattr(button, 'render')">
        <button
              tal:define="btn_disposition repeat.button.start and 'btn-primary' or 'btn-default';
              btn_icon button.icon|None"
              tal:attributes="disabled button.disabled if button.disabled else None"
              id="${formid+button.name}"
              name="${button.name}"
              type="${button.type}"
              class="btn ${btn_disposition} ${button.css_class}"
              value="${button.value}">
          <i tal:condition="btn_icon" class="${btn_icon}"> </i>
          ${button.title}
        </button>
        </tal:if>
      </tal:loop>
    </div>
  </fieldset>

  <script type="text/javascript" tal:condition="use_ajax">
   deform.addCallback(
     '${formid}',
     function(oid) {
       var target = '#' + oid;
       var options = {
         target: target,
         replaceTarget: true,
         success: function() {
           deform.processCallbacks();
           deform.focusFirstInput(target);
         },
         beforeSerialize: function() {
           // See http://bit.ly/1agBs9Z (hack to fix tinymce-related ajax bug)
           if ('tinymce' in window) {
             $(tinymce.get()).each(
               function(i, el) {
                 var content = el.getContent();
                 var editor_input = document.getElementById(el.id);
                 editor_input.value = content;
             });
           }
         }
       };
       var extra_options = ${ajax_options} || {};
       $('#' + oid).ajaxForm($.extend(options, extra_options));
     }
   );
  </script>

</form>
